
package Album; 
public class Album {
    private String name;
    private String condition;
    private PhotoManager manager;
    private int NbComps;

    // Constructor
    public Album(String name, String condition, PhotoManager manager) {
        this.name = name;
        this.condition = condition;
        this.manager = manager;
        NbComps = 0;
    }

    // Return the name of the album
    public String getName() {
        return name;
    }

    // Return the condition associated with the album
    public String getCondition() {
        return condition;
    }

    // Return the manager
    public PhotoManager getManager() {
        return manager;
    }

    // Return all photos that satisfy the album condition
    public LinkedList<Photo> getPhotos() {
        NbComps = 0;
        LinkedList<Photo> Rphotos = new LinkedList<Photo>();
        LinkedList<Photo> allPhotos = manager.getPhotos();

        if (!allPhotos.empty()) {
            allPhotos.findFirst();
            while (true) {
                Photo currentPhoto = allPhotos.retrieve();
                if (condition.isEmpty() || satisfiesCondition(currentPhoto)) {
                    Rphotos.insert(currentPhoto);
                }
                if (allPhotos.last()) break;
                allPhotos.findNext();
            }
        }

        return Rphotos;
    }

    // Return the number of tag comparisons used to find all photos of the album
    public int getNbComps() {
        return NbComps;
    }

    // Check if a photo satisfies the album condition
    private boolean satisfiesCondition(Photo photo) {
        String[] requiredTags = condition.split(" AND ");
        LinkedList<String> photoTags = photo.getTags();

        if (photoTags.empty()) return false;

        for (String tag : requiredTags) {
            boolean found = false;
            photoTags.findFirst();
            while (true) {
                NbComps++;
                if (photoTags.retrieve().equalsIgnoreCase(tag)) {
                    found = true;
                    break;
                }
                if (photoTags.last()) break;
                photoTags.findNext();
            }
            if (!found) return false;
        }

        return true;
    }
}
